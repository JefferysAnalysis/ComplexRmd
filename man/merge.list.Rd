% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{merge.list}
\alias{merge.list}
\title{Merge a list with another object}
\usage{
\method{merge}{list}(x, y, ...)
}
\arguments{
\item{x}{A list}

\item{y}{A value to merge, general a list but if not it will be converted to
a list using \code{as.list}}

\item{...}{Unused, present only for compatibility with the generic.}
}
\value{
A list equal to the first list followed by the second list without
any of its named elements already included in the first list.
}
\description{
Concatenates two lists, preserving order but dropping elements with
duplicated names from the second list. If the second parameter is not a list,
it will be converted to one with \code{as.list}. Names must be unique within each
list but may be (and probably are) duplicated between them. Unnamed elements
are allowed and are always kept.
}
\examples{
first  <- list( "x1", x2name="x2", shared3="in x", "x4" )
second <- list( "y1", y2name="y2", shared3="in y", "y4" )
combined <- merge( first, second )
want <- list( "x1", x2name="x2", shared3="in x", "x4",
              "y1", y2name="y2",                 "y4" )
all.equal( combined, want )
#> TRUE

charVec <- c( "y1", y2name="y2", shared3="in y", "y4" )
combinedWithVec <- merge( first, charVec )
all.equal( combinedWithVec, want )
#> TRUE

}
